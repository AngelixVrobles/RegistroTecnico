@page "/Sistema/Create"
@inject SistemaServices sistemaService
@inject NavigationManager navigation
@rendermode InteractiveServer

<EditForm Model="Sistema" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container p-0">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white">
                <h3 class="card-title"><strong>Registro de Sistemas</strong></h3>
            </div>

            <div class="card-body">

                @*Id*@
                <div class="mb-3">
                    <label class="form-label"><strong>SistemaId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Sistema.SistemasId" readonly />
                </div>

                @*Descripcion*@
                <div class="mb-3">
                    <label class="form-label"><strong>Descripción</strong></label>
                    <InputText class="form-control" @bind-Value="Sistema.Descripcion" />
                    <ValidationMessage For="@(() => Sistema.Descripcion)" />
                </div>

                @*Complejidad*@
                <div class="mb-3">
                    <label class="form-label"><strong>Complejidad</strong></label>
                    <InputSelect class="form-select" @bind-Value="Sistema.Complejidad">
                        <option value="0" disabled selected>Seleccione una complejidad</option>
                        <option value="1">Baja</option>
                        <option value="2">Media</option>
                        <option value="3">Alta</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => Sistema.Complejidad)" />
                </div>

            </div>

            <div class="card-footer text-center mt-3">
                <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">
                    <span class="bi bi-plus"></span> Nuevo
                </button>
                <button type="submit" class="btn btn-outline-success">
                    <span class="bi bi-check-circle-fill"></span> Guardar
                </button>
                <a href="/Sistema/Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-bar-left"></i> Volver
                </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Sistemas Sistema { get; set; } = new Sistemas();
    [Inject] protected ToastService ToastService { get; set; }

    public Create(ToastService toastService)
    {
        ToastService = toastService;
    }

    public async Task Crear()
    {
        var existente = await sistemaService.Listar(s => s.Descripcion.ToLower() == Sistema.Descripcion.ToLower());

        if (existente.Any())
        {
            ToastService.Notify(new(ToastType.Warning, "Duplicado", "Ya existe un sistema con esa descripción."));
            return;
        }

        if (Sistema.SistemasId == 0)
        {
            await sistemaService.Guardar(Sistema);
            ToastService.Notify(new(ToastType.Success, "Éxito", $"Sistema creado correctamente."));
            Sistema = new Sistemas();
            navigation.NavigateTo("/Sistema/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", $"No se pudo crear el sistema."));
        }
    }

    public void Nuevo()
    {
        Sistema = new Sistemas();
    }
}
